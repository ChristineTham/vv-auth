---
import { Settings } from '../config'
import Navbar from '../components/navbar.astro'
import Footer from '../components/footer.astro'
import Metadata from '../components/metadata.astro'

export interface Props {
  author?: string
  title?: string
  description?: string
  date?: Date
  image?: ImageMetadata
  tags?: string[]
  schema?: string
}

const {
  author,
  title,
  description,
  date,
  image,
  tags,
  schema = 'WebPage'
} = Astro.props
---

<!DOCTYPE html>
<html lang="en" itemscope itemtype={'https://Schema.org/' + schema}>
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" href="/favicon.ico" sizes="any" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link
      rel="alternate"
      type="application/rss+xml"
      title="RSS"
      href="/rss.xml"
    />
    <meta name="generator" content={Astro.generator} />
    <style is:inline>
      [x-cloak] {
        display: none !important;
      }
    </style>
    <Metadata {author} {title} {description} {date} {image} {tags} />
    <!-- <script is:inline src="https://identity.netlify.com/v1/netlify-identity-widget.js"></script> -->

    <title>
      {title || Settings.site_name}
    </title>
    {description && <meta name="description" content={description} />}
    {author && <meta name="author" content={author} />}
    {tags && <meta name="keywords" content={tags.join(', ')} />}
  </head>
  <body class="font-sans text-gray-700 antialiased bg-white">
    <Navbar />
    <slot />
    <Footer />
    <script>
      import netlifyIdentity from 'netlify-identity-widget'

      declare global {
        interface Window {
          netlifyIdentity: any
          netlifyUser: any
        }
      }

      netlifyIdentity.on('init', (user) => {
        window.netlifyUser = user
      })
      netlifyIdentity.on('close', () => window.location.reload())
      netlifyIdentity.init()
      window.netlifyIdentity = netlifyIdentity
      const manage = document.getElementById('manage')
      if (window.netlifyUser) {
        const status = document.getElementById('status')

        status!.innerHTML = `${window.netlifyUser.user_metadata.full_name}<br />(${window.netlifyUser.email})`
        manage!.innerText = 'Manage membership'
      }
      manage!.addEventListener('click', () => {
        if (!window.netlifyUser) {
          window.netlifyIdentity.open()
        }

        if (window.netlifyUser) {
          fetch('/api/create-manage-link', {
            method: 'POST',
            headers: {
              Authorization: `Bearer ${window.netlifyUser.token.access_token}`
            },
            body: JSON.stringify(window.netlifyUser)
          })
            .then((res) => res.json())
            .then((link) => {
              window.location.href = link
            })
            .catch((err) => console.error(err))
        } else {
          console.log('Need to login first')
        }
      })
    </script>
  </body>
</html>
