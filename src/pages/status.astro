---
import Layout from '../layouts/default.astro'

const title = 'Status'
const description = ''
---

<Layout {title} {description}>
  <div class="text-center py-12 px-6 mt-12">
    <h1 class="font-display font-bold text-5xl mb-6">{title}</h1>
    <p class="max-w-lg mx-auto">{description}</p>
  </div>

  <div class="container mx-auto px-6 mb-12 prose prose-sm sm:prose lg:prose-lg">
    <a class="my-2" href="/api/joke">
      <p>Click here for function-loaded jokes!</p>
    </a>
    <div class="user-info">
      <button id="left">Log In</button>
      <button id="right">Sign Up</button>
    </div>
    <p id="userstatus">User not logged in.</p>
  </div>
  <script>
    const userstatus = document.getElementById('userstatus')
    const button1 = document.getElementById('left')
    const button2 = document.getElementById('right')

    const login = () => netlifyIdentity.open('login')
    const signup = () => netlifyIdentity.open('signup')

    // by default, add login and signup functionality
    button1.addEventListener('click', login)
    button2.addEventListener('click', signup)

    const updateUserInfo = (user) => {
      const container = document.querySelector('.user-info')

      // cloning the buttons removes existing event listeners
      const b1 = button1.cloneNode(true)
      const b2 = button2.cloneNode(true)

      // empty the user info div
      container.innerHTML = ''

      if (user) {
        userstatus.innerText = `Currently logged in: ${user.user_metadata.full_name} (${user.email})`
        b1.innerText = 'Log Out'
        b1.addEventListener('click', () => {
          netlifyIdentity.logout()
        })

        b2.innerText = 'Manage Subscription'
        b2.addEventListener('click', () => {
          // TODO handle subscription management
        })
      } else {
        // if no one is logged in, show login/signup options
        b1.innerText = 'Log In'
        b1.addEventListener('click', login)

        b2.innerText = 'Sign Up'
        b2.addEventListener('click', signup)
      }

      // add the updated buttons back to the user info div
      container.appendChild(b1)
      container.appendChild(b2)
    }

    const handleUserStateChange = (user) => {
      updateUserInfo(user)
    }

    netlifyIdentity.on('init', handleUserStateChange)
    netlifyIdentity.on('login', handleUserStateChange)
    netlifyIdentity.on('logout', handleUserStateChange)
  </script>
</Layout>
