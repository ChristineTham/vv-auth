---
import Layout from '../layouts/default.astro'

const title = 'Subscription'
const description = ''
---

<style>
  .user-info {
    align-items: center;
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(2, 1fr);
    list-style: none;
    padding: 0;
  }

  .user-info button {
    background: var(--dark-gray);
    border: 0;
    border-radius: 0.5rem;
    color: var(--white);
    display: block;
    font-family: var(--font-family);
    font-size: 1.5rem;
    font-weight: 900;
    padding: 1rem;
    text-align: center;
    text-decoration: none;
  }

  .corgi-content {
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(3, 1fr);
  }

  .content h2 {
    font-size: 1.25rem;
    text-align: center;
  }

  .content-display {
    margin: 0;
  }

  .credit {
    display: block;
    font-size: 0.75rem;
  }

  .content img {
    width: 100%;
  }
</style>
<Layout {title} {description}>
  <div class="text-center py-12 px-6 mt-12">
    <h1 class="font-display font-bold text-5xl mb-6">{title}</h1>
    <p class="max-w-lg mx-auto">{description}</p>
  </div>
  <div class="container mx-auto px-6 mb-12 prose prose-sm sm:prose lg:prose-lg">
    <div class="user-info">
      <button id="left">Log In</button>
      <button id="right">Sign Up</button>
    </div>

    <div class="corgi-content">
      <div class="content">
        <h2>Free Content</h2>
        <div class="free"></div>
      </div>
      <div class="content">
        <h2>Pro Content</h2>
        <div class="pro"></div>
      </div>
      <div class="content">
        <h2>Premium Content</h2>
        <div class="premium"></div>
      </div>
    </div>

    <template id="content">
      <figure class="content-display">
        <img />
        <figcaption>
          <a class="credit"></a>
        </figcaption>
      </figure>
    </template>
  </div>

  <script>
    const button1 = document.getElementById('left')
    const button2 = document.getElementById('right')

    const login = () => netlifyIdentity.open('login')
    const signup = () => netlifyIdentity.open('signup')

    // by default, we want to add login and signup functionality
    button1.addEventListener('click', login)
    button2.addEventListener('click', signup)

    const updateUserInfo = (user) => {
      const container = document.querySelector('.user-info')

      // cloning the buttons removes existing event listeners
      const b1 = button1.cloneNode(true)
      const b2 = button2.cloneNode(true)

      // empty the user info div
      container.innerHTML = ''

      if (user) {
        b1.innerText = 'Log Out'
        b1.addEventListener('click', () => {
          netlifyIdentity.logout()
        })

        b2.innerText = 'Manage Subscription'
        b2.addEventListener('click', () => {
          // TODO handle subscription management
          fetch('/.netlify/functions/create-manage-link', {
            method: 'POST',
            headers: {
              Authorization: `Bearer ${user.token.access_token}`
            }
          })
            .then((res) => res.json())
            .then((link) => {
              window.location.href = link
            })
            .catch((err) => console.error(err))
        })
      } else {
        // if no one is logged in, show login/signup options
        b1.innerText = 'Log In'
        b1.addEventListener('click', login)

        b2.innerText = 'Sign Up'
        b2.addEventListener('click', signup)
      }

      // add the updated buttons back to the user info div
      container.appendChild(b1)
      container.appendChild(b2)
    }

    const loadSubscriptionContent = async (user) => {
      const token = user ? await netlifyIdentity.currentUser().jwt(true) : false

      ;['free', 'pro', 'premium'].forEach((type) => {
        fetch('/.netlify/functions/get-protected-content', {
          method: 'POST',
          headers: {
            Authorization: `Bearer ${token}`
          },
          body: JSON.stringify({ type })
        })
          .then((res) => res.json())
          .then((data) => {
            const template = document.querySelector('#content')
            const container = document.querySelector(`.${type}`)

            // remove any existing content from the content containers
            const oldContent = container.querySelector('.content-display')
            if (oldContent) {
              container.removeChild(oldContent)
            }

            const content = template.content.cloneNode(true)

            const img = content.querySelector('img')
            img.src = data.src
            img.alt = data.alt

            const credit = content.querySelector('.credit')
            credit.href = data.creditLink
            credit.innerText = `Credit: ${data.credit}`

            const caption = content.querySelector('figcaption')
            caption.innerText = data.message
            caption.appendChild(credit)

            container.appendChild(content)
          })
      })
    }

    const handleUserStateChange = (user) => {
      updateUserInfo(user)
      loadSubscriptionContent(user)
    }

    netlifyIdentity.on('init', handleUserStateChange)
    netlifyIdentity.on('login', handleUserStateChange)
    netlifyIdentity.on('logout', handleUserStateChange)
  </script>
</Layout>
